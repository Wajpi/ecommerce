pipeline {
    agent any

    environment {
        SONARQUBE_TOKEN = credentials('sonarqube-token')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'develop', url: 'https://github.com/your-company/your-repo.git'
            }
        }

        stage('Build') {
            steps {
                // Example: using Maven
                sh 'mvn clean package'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'SonarQube Scanner 4.0';
                    withSonarQubeEnv('Your SonarQube Server') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=YourProjectKey -Dsonar.sources=. -Dsonar.host.url=http://your-sonar-url -Dsonar.login=$SONARQUBE_TOKEN"
                    }
                }
            }
        }

        stage('Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--project YourProjectName', odcInstallation: 'Dependency-Check'
            }
        }

        // Optionally add deployment or further steps
    }

    post {
        always {
            // Cleanup, notifications or other end steps.
        }
    }
}
